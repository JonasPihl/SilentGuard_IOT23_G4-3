Index: face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.face_detection_application.ui.settings;\r\n\r\nimport static java.lang.Math.pow;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.TimePicker;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.face_detection_application.databinding.FragmentSettingsBinding;\r\nimport com.example.face_detection_application.ui.log.retrofitInterface;\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\n\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.DoubleStream;\r\n\r\npublic class SettingsFragment extends Fragment {\r\n\r\n    private FragmentSettingsBinding binding;\r\n    private boolean systemEnabled;\r\n    private static final String serverAdress = \"http://192.168.1.174:5000\";  // TODO Replace with Pi's IP\r\n    //private static final String serverAdress = \"http://192.168.0.13:5000\";  // TODO Replace with Pi's IP\r\n    //private static final String serverAdress = \"http://192.168.10.193:5000\";  // TODO Replace with Pi's IP\r\n    private ImageView colorWheel;\r\n    private Bitmap colorBitMap;\r\n    private String colorHexValue;\r\n    private int red, green, blue;\r\n    private Color completeColor;\r\n    private Button timeStartButton;\r\n    private Button timeEndButton;\r\n    private int startHour, startMin;\r\n    private int endHour, endMin;\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        SettingsViewModel settingsViewModel =\r\n                new ViewModelProvider(this).get(SettingsViewModel.class);\r\n\r\n        binding = FragmentSettingsBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n\r\n        getSystemState();\r\n\r\n        colorWheel = binding.colorWheel;\r\n        colorWheel.setVisibility(View.INVISIBLE);\r\n\r\n        timeStartButton = binding.timeStartButton;\r\n        timeEndButton = binding.timeEndButton;\r\n\r\n        timeStartButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                createTimePickerDialog(v, true);\r\n                System.out.println(startHour + startMin);\r\n\r\n            }\r\n        });\r\n        timeEndButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                createTimePickerDialog(v, false);\r\n            }\r\n        });\r\n\r\n        binding.disableButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                systemEnabled = !systemEnabled;\r\n                Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress).build();\r\n                retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n                Call<Void> onOff = apiService.on_off(systemEnabled);\r\n\r\n                if (systemEnabled) {\r\n                    onOff.enqueue(new Callback<Void>() {\r\n                        @Override\r\n                        public void onResponse(Call<Void> call, Response<Void> response) {\r\n                            // Handle success\r\n\r\n                            System.out.println(\"Enabling system\");\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<Void> call, Throwable t) {}\r\n                    });\r\n\r\n                } else {\r\n                    onOff.enqueue(new Callback<Void>() {\r\n                        @Override\r\n                        public void onResponse(Call<Void> call, Response<Void> response) {\r\n                            // Handle success\r\n                            binding.disableButton.setChecked(false);\r\n\r\n                            System.out.println(\"Disabling system\");\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<Void> call, Throwable t) {}\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.colorButton.setOnClickListener(new View.OnClickListener() {\r\n            @SuppressLint(\"ClickableViewAccessibility\") //Supress accessability warning\r\n            @Override\r\n            public void onClick(View v) {\r\n                colorWheel = binding.colorWheel;\r\n\r\n                boolean isVisible = colorWheel.getVisibility() == View.VISIBLE;\r\n\r\n                if (isVisible){\r\n                    colorWheel.setVisibility(View.INVISIBLE);\r\n                    sendHexToHue(colorHexValue);\r\n\r\n                    List<Double> XYValues = getRGBtoHueXY(completeColor);\r\n                    System.out.println(\"This is x: \"+ XYValues.get(0) + \" This is y: \"+ XYValues.get(1));\r\n\r\n                    Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress).build();\r\n                    retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n                    Call<Double> updateColor = apiService.updateColor(XYValues.get(0), XYValues.get(1));\r\n\r\n                    try {\r\n                        updateColor.execute();\r\n                    } catch (IOException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n\r\n                    if (completeColor != null){\r\n                        getRGBtoHueXY(completeColor);\r\n                    }\r\n\r\n                } else {\r\n                    colorWheel.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                colorWheel.setOnTouchListener(new View.OnTouchListener() {\r\n                    String startingColor = \"#fffe4b3f\"; //todo get live colorValue from hue system\r\n                    @Override\r\n                    public boolean onTouch(View v, MotionEvent event) {\r\n                        int x = (int)event.getX();\r\n                        int y = (int)event.getY();\r\n\r\n                        //todo Limit rate of retrieved hexValues from bitmap\r\n                        if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE){\r\n                            colorBitMap = getBitMapFromView(colorWheel);\r\n                        }\r\n\r\n                        int colorPixels = colorBitMap.getPixel(x, y);\r\n\r\n                        completeColor = colorBitMap.getColor(x, y);\r\n\r\n                        ///\r\n                        red = Color.red(colorPixels);\r\n                        green = Color.green(colorPixels);\r\n                        blue = Color.blue(colorPixels);\r\n                        ///\r\n\r\n                        colorHexValue = \"#\"+ Integer.toHexString(colorPixels);\r\n\r\n                        if (colorHexValue.equals(\"#0\")){\r\n                            colorHexValue = startingColor;\r\n                        }\r\n\r\n                        System.out.println(\"r g b: \" + red + \" \" + green + \" \" + blue);\r\n\r\n                        System.out.println(colorPixels);\r\n\r\n                        System.out.println(colorHexValue);\r\n\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        final TextView textView = binding.textNotifications;\r\n        settingsViewModel.getText().observe(getViewLifecycleOwner(), textView::setText);\r\n        return root;\r\n    }\r\n    ///\r\n    public static List<Double> getRGBtoHueXY(Color completeColor) {\r\n        // https://developers.meethue.com/develop/application-design-guidance/color-conversion-formulas-rgb-to-xy-and-back/\r\n        double red, green, blue;\r\n\r\n        //Breakout rgb values from color\r\n        red = completeColor.red();\r\n        green = completeColor.green();\r\n        blue = completeColor.blue();\r\n\r\n        //Gamma correction for colors\r\n        red = (red > 0.04045f) ? pow((red + 0.055f) / (1.0f + 0.055f), 2.4f) : (red / 12.92f);\r\n        green = (green > 0.04045f) ? pow((green + 0.055f) / (1.0f + 0.055f), 2.4f) : (green / 12.92f);\r\n        blue = (blue > 0.04045f) ? pow((blue + 0.055f) / (1.0f + 0.055f), 2.4f) : (blue / 12.92f);\r\n\r\n        //Convert RBG to XYZ with Wide RGB D65 formula\r\n        float X = (float) (red * 0.649926 + green * 0.103455 + blue * 0.197109);\r\n        float Y = (float) (red * 0.234327 + green * 0.743075 + blue * 0.022598);\r\n        float Z = (float) (red * 0.0000000 + green * 0.053077 + blue * 1.035763);\r\n\r\n        //Calculate XY values from XYZ\r\n        float x = X / (X + Y + Z);\r\n        float y = Y / (X + Y + Z);\r\n\r\n        double[] xy = new double[2];\r\n        xy[0] = x;\r\n        xy[1] = y;\r\n        List<Double> xyAsList = DoubleStream.of(xy).boxed().collect(Collectors.toList());\r\n\r\n        System.out.println(x + \" \" + y);\r\n        return xyAsList;\r\n    }\r\n    ///\r\n\r\n    private void sendHexToHue(String colorHexValue){\r\n        //todo send colorHexValue to hue\r\n        if (colorHexValue != null){\r\n            System.out.println(colorHexValue + \" sent to hue\");\r\n        } else {\r\n            System.out.println(\"No color sent to hue.\");\r\n        }\r\n\r\n    }\r\n\r\n    private void getSystemState(){\r\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n        retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n        Call<Boolean> state_of_server = apiService.state_of_server();\r\n        state_of_server.enqueue(new Callback<Boolean>() {\r\n            @Override\r\n            public void onResponse(Call<Boolean> call, Response<Boolean> response) {\r\n                if (response.isSuccessful()) {\r\n                    // Set status of the btn according to server repsonse\r\n                    System.out.println(response.body());\r\n                    systemEnabled = response.body();\r\n                    binding.disableButton.setChecked(response.body());\r\n                }\r\n            }\r\n            @Override\r\n            public void onFailure(Call<Boolean> call, Throwable t) {\r\n                getSystemState();\r\n            }\r\n        });\r\n    }\r\n\r\n    private Bitmap getBitMapFromView(View view) {\r\n        Bitmap bitmap = Bitmap.createBitmap(\r\n                view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888\r\n        );\r\n        Canvas canvas = new Canvas(bitmap);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    private void createTimePickerDialog(View view, Boolean isStartTimeButton){\r\n        TimePickerDialog.OnTimeSetListener onTimeSetListener = new TimePickerDialog.OnTimeSetListener() {\r\n            @Override\r\n            public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                if (isStartTimeButton){\r\n                    startHour = hourOfDay;\r\n                    startMin = minute;\r\n                    timeStartButton.setText(String.format(\"%02d:%02d\", startHour, startMin));\r\n\r\n                    Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress).build();\r\n                    retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n                    Call<Integer> updateStartTime = apiService.updateStartTime(startHour+startMin);\r\n\r\n                    try {\r\n                        updateStartTime.execute();\r\n                    } catch (IOException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n\r\n                } else {\r\n                    endHour = hourOfDay;\r\n                    endMin = minute;\r\n                    timeEndButton.setText(String.format(\"%02d:%02d\", endHour, endMin));\r\n\r\n                    Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress).build();\r\n                    retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n                    Call<Integer> updateEndTime = apiService.updateEndTime(endHour+endMin);\r\n\r\n                    try {\r\n                        updateEndTime.execute();\r\n                    } catch (IOException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        int dialogTheme = AlertDialog.THEME_HOLO_LIGHT;\r\n        TimePickerDialog timePickerDialog = new TimePickerDialog(requireContext(), dialogTheme, onTimeSetListener, startHour, startMin, true);\r\n        timePickerDialog.updateTime(0, 0);\r\n        timePickerDialog.show();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n\r\n    @Override\r\n    public void onResume(){\r\n        super.onResume();\r\n        getSystemState();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java b/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java
--- a/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java	(date 1703852171939)
@@ -47,9 +47,9 @@
 
     private FragmentSettingsBinding binding;
     private boolean systemEnabled;
-    private static final String serverAdress = "http://192.168.1.174:5000";  // TODO Replace with Pi's IP
+    //private static final String serverAdress = "http://192.168.1.174:5000";  // TODO Replace with Pi's IP
     //private static final String serverAdress = "http://192.168.0.13:5000";  // TODO Replace with Pi's IP
-    //private static final String serverAdress = "http://192.168.10.193:5000";  // TODO Replace with Pi's IP
+    private static final String serverAdress = "http://192.168.10.193:5000";  // TODO Replace with Pi's IP
     private ImageView colorWheel;
     private Bitmap colorBitMap;
     private String colorHexValue;
Index: face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.face_detection_application.ui.log;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ListView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport com.example.face_detection_application.databinding.FragmentLogBinding;\r\n\r\nimport java.io.IOException;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.AbstractMap;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\n\r\npublic class LogFragment extends Fragment {\r\n\r\n    private FragmentLogBinding binding;\r\n    private ListView logs;\r\n    private static final String serverAdress = \"http://192.168.1.174:5000\";\r\n\r\n    //private static final String serverAdress = \"http://192.168.0.13:5000\";  // TODO Replace with Pi's IP\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n\r\n\r\n        binding = FragmentLogBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n\r\n        logs = binding.logs;\r\n        ImageListAdapter adapter = new ImageListAdapter(requireActivity(), new ArrayList<>());\r\n        logs.setAdapter(adapter);\r\n        return root;\r\n    }\r\n\r\n    private void getImagesWithRetry() {\r\n        getImagesWithRetryRecursive();\r\n    }\r\n\r\n    private void getImagesWithRetryRecursive() {\r\n\r\n        //Prepares to talk to server\r\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAdress).addConverterFactory(GsonConverterFactory.create()).build();\r\n        retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n        Call<Map<String, List<String>>> imageListCall = apiService.getImageList();\r\n\r\n        imageListCall.enqueue(new Callback<Map<String, List<String>>>() {\r\n            @Override\r\n            public void onResponse(Call<Map<String, List<String>>> call, Response<Map<String, List<String>>> response) {\r\n                if (response.isSuccessful()) {\r\n                    Map<String, List<String>> responseBody = response.body();\r\n                    System.out.println(responseBody);\r\n                    if (responseBody != null && responseBody.containsKey(\"image_list\")) {\r\n                        List<Map.Entry<String, String>> imageEntries = new ArrayList<>();\r\n\r\n                        for (String filename : responseBody.get(\"image_list\")) {\r\n                            // Construct the full image URL\r\n                            String imageUrl =  serverAdress + \"/images/\" + filename;\r\n                            // Create a Map.Entry for each image\r\n                            Map.Entry<String, String> entry = new AbstractMap.SimpleEntry<>(filename, imageUrl);\r\n                            // Add the entry to the list\r\n                            imageEntries.add(entry);\r\n                        }\r\n\r\n                        // Custom sorter that sorts the images by the their filename dates.\r\n                        Collections.sort(imageEntries, new Comparator<Map.Entry<String, String>>() {\r\n                            @Override\r\n                            public int compare(Map.Entry<String, String> entry1, Map.Entry<String, String> entry2) {\r\n                                SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy(HH:mm)\", Locale.getDefault());\r\n                                try {\r\n                                    Date date1 = dateFormat.parse(entry1.getKey());\r\n                                    Date date2 = dateFormat.parse(entry2.getKey());\r\n                                    return date1.compareTo(date2);\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                    return 0;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        Collections.reverse(imageEntries);\r\n\r\n\r\n                        // Update the custom adapter with the new content (Image and corresponding text)\r\n                        ImageListAdapter adapter = new ImageListAdapter(requireContext(), imageEntries);\r\n                        logs.setAdapter(adapter);\r\n                        adapter.notifyDataSetChanged();\r\n                    } else {\r\n                        System.out.println(\"Response body is null or does not contain 'image_list'\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Map<String, List<String>>> call, Throwable t) {\r\n                System.out.println(\"Fail: \" + t.getMessage());\r\n                // Retry indefinitely on failure\r\n                getImagesWithRetryRecursive();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onResume() {\r\n        //Reloads the log each time the fragment is reloaded\r\n        super.onResume();\r\n        getImagesWithRetry();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java b/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java
--- a/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java	(date 1703852171933)
@@ -34,9 +34,9 @@
 
     private FragmentLogBinding binding;
     private ListView logs;
-    private static final String serverAdress = "http://192.168.1.174:5000";
-
+    //private static final String serverAdress = "http://192.168.1.174:5000";
     //private static final String serverAdress = "http://192.168.0.13:5000";  // TODO Replace with Pi's IP
+    private static final String serverAdress = "http://192.168.10.193:5000";  // TODO Replace with Pi's IP
 
     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 
Index: face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.face_detection_application.ui.stream;\r\n\r\nimport android.graphics.SurfaceTexture;\r\nimport android.media.MediaPlayer;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Surface;\r\nimport android.view.TextureView;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.WebView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.face_detection_application.databinding.FragmentStreamBinding;\r\nimport com.example.face_detection_application.ui.log.retrofitInterface;\r\n\r\nimport java.io.IOException;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\n\r\npublic class StreamFragment extends Fragment {\r\n\r\n    private static final String serverAddress = \"http://192.168.1.174\";\r\n    //private static final String serverAddress = \"http://192.168.0.13\";\r\n\r\n    private FragmentStreamBinding binding;\r\n\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        binding = FragmentStreamBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n        startStream();\r\n        return root;\r\n    }\r\n\r\n    private void startStream(){\r\n        //Prepares to talk to server\r\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAddress + \":5000\").build();\r\n        retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n        Call<Void> startStream = apiService.start_stream();\r\n        startStream.enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                //Binds the webview and adds the link it should search for\r\n                WebView myWebView = binding.webview;\r\n                myWebView.loadUrl(serverAddress + \":8080/?action=stream\");\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                t.getMessage();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void stopStream(){\r\n        //Prepares to talk to server\r\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(serverAddress + \":5000\").build();\r\n        retrofitInterface apiService = retrofit.create(retrofitInterface.class);\r\n        Call<Void> stopStream = apiService.stop_stream();\r\n        stopStream.enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {}\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {}\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        startStream();\r\n    }\r\n\r\n    public void onPause() {\r\n        super.onPause();\r\n        stopStream();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java b/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java
--- a/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java	(date 1703852171928)
@@ -26,8 +26,9 @@
 
 public class StreamFragment extends Fragment {
 
-    private static final String serverAddress = "http://192.168.1.174";
+    //private static final String serverAddress = "http://192.168.1.174";
     //private static final String serverAddress = "http://192.168.0.13";
+    private static final String serverAddress = "http://192.168.10.193";
 
     private FragmentStreamBinding binding;
 
Index: Python/flaskServer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport subprocess\r\nfrom flask import Flask, jsonify, request, send_from_directory\r\nimport cv2\r\nfrom flask import Flask, Response, jsonify, request, send_from_directory\r\nfrom flask_socketio import SocketIO\r\nimport xml.etree.ElementTree as ET\r\n\r\napp = Flask(__name__)\r\nprocess = None\r\nrunning = False\r\n\r\n@app.route('/updateStartTime', methods=['POST'])\r\ndef updateStartTime():\r\n    try:\r\n        #change xml file here\r\n\r\n        return jsonify({\"message\": \"Success\"})\r\n    except Exception as e:\r\n        # Log the exception or handle it as needed\r\n        return jsonify({\"error\": str(e)}), 500\r\n    \r\n@app.route('/updateEndTime', methods=['POST'])\r\ndef updateEndTime():\r\n    try:\r\n        #change xml file here\r\n        return jsonify({\"message\": \"Success\"})\r\n    except Exception as e:\r\n        # Log the exception or handle it as needed\r\n        return jsonify({\"error\": str(e)}), 500\r\n\r\n@app.route('/updateColor', methods=['POST'])\r\ndef updateEndTime():\r\n    try:\r\n        #change xml file here\r\n        return jsonify({\"message\": \"Success\"})\r\n    except Exception as e:\r\n        # Log the exception or handle it as needed\r\n        return jsonify({\"error\": str(e)}), 500\r\n\r\n@app.route('/state_of_server')\r\ndef state_of_server():\r\n    return jsonify(running)\r\n\r\n\r\n@app.route('/start_stream')\r\ndef start_stream():\r\n    global process, running\r\n    if process is not None:\r\n        process.terminate()\r\n    process = subprocess.Popen([\r\n    '/home/p3/mjpg-streamer/mjpg-streamer-experimental/mjpg_streamer',\r\n    '-i', '/home/p3/mjpg-streamer/mjpg-streamer-experimental/input_uvc.so -r 640x480',\r\n    '-o', '/home/p3/mjpg-streamer/mjpg-streamer-experimental/output_http.so -w ./www'])\r\n    #TODO change the path to the mjpg-streamer folder to the correct path in the pi\r\n    \r\n    return jsonify({\"message\": \"Success\"})\r\n\r\n\r\n@app.route('/stop_stream')\r\ndef stop_stream():\r\n    global process, running\r\n    if process is not None:\r\n        process.terminate()\r\n    return jsonify({\"message\": \"Success\"})\r\n\r\n\r\n@app.route('/get_image_list')\r\ndef get_image_list():\r\n    image_files = [f for f in os.listdir(\"Python/images\") if f.endswith(\".jpg\")]\r\n    return jsonify({\"image_list\": image_files})\r\n\r\n\r\n@app.route('/images/<path:filename>')\r\ndef serve_image(filename):\r\n    return send_from_directory(\"Python/images\", filename)\r\n\r\n\r\n@app.route('/on_off', methods=['POST'])\r\ndef on_off():\r\n    global process, running\r\n    try:\r\n        status_request = request.args.get('value')\r\n        if status_request is not None:\r\n            if status_request == \"true\":\r\n                running = True\r\n                process = subprocess.Popen([\"python3\", \"Python/faceDet.py\"])\r\n            else:\r\n                running = False\r\n                process.terminate()\r\n        return jsonify({\"message\": \"Success\"})\r\n    except Exception as e:\r\n        # Log the exception or handle it as needed\r\n        return jsonify({\"error\": str(e)}), 500\r\n\r\ndef write_color_to_xml():\r\n    tree = ET.parse('assets.xml')\r\n    root = tree.getroot()\r\n\r\n    # Locate the elements in xml file to update\r\n    x_value = root.find('x_value')\r\n    y_value = root.find('y_value')\r\n\r\n    # Update the values\r\n    x_value.text = ''  # Update value1 to 42\r\n    y_value.text = '7.77'  # Update value2 to 7.77\r\n\r\n    # Write the changes back to the file\r\n    tree.write('data.xml')\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    app.run(host='0.0.0.0', port=5000,debug=True)\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Python/flaskServer.py b/Python/flaskServer.py
--- a/Python/flaskServer.py	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/Python/flaskServer.py	(date 1703852234981)
@@ -11,7 +11,7 @@
 running = False
 
 @app.route('/updateStartTime', methods=['POST'])
-def updateStartTime():
+def update_start_time():
     try:
         #change xml file here
 
@@ -21,18 +21,38 @@
         return jsonify({"error": str(e)}), 500
     
 @app.route('/updateEndTime', methods=['POST'])
-def updateEndTime():
+def update_end_time():
     try:
         #change xml file here
+        end_hour = request.args.get('end_hour')
+        end_min = request.args.get('end_min')
+
         return jsonify({"message": "Success"})
     except Exception as e:
         # Log the exception or handle it as needed
         return jsonify({"error": str(e)}), 500
 
 @app.route('/updateColor', methods=['POST'])
-def updateEndTime():
+def update_color():
     try:
         #change xml file here
+        x_color = request.args.get('colorX')
+        y_color = request.args.get('colorY')
+        def write_color_to_xml():
+            tree = ET.parse('assets.xml')
+            root = tree.getroot()
+
+            # Locate the elements in xml file to update
+            x_value = root.find('x_value')
+            y_value = root.find('y_value')
+
+            # Update the values
+            x_value.text = x_color  # Update value1 to 42
+            y_value.text = y_color  # Update value2 to 7.77
+
+            # Write the changes back to the file
+            tree.write('assets.xml')
+
         return jsonify({"message": "Success"})
     except Exception as e:
         # Log the exception or handle it as needed
@@ -84,7 +104,7 @@
         if status_request is not None:
             if status_request == "true":
                 running = True
-                process = subprocess.Popen(["python3", "Python/faceDet.py"])
+                process = subprocess.Popen(["python3", "faceDet.py"])
             else:
                 running = False
                 process.terminate()
@@ -93,21 +113,6 @@
         # Log the exception or handle it as needed
         return jsonify({"error": str(e)}), 500
 
-def write_color_to_xml():
-    tree = ET.parse('assets.xml')
-    root = tree.getroot()
-
-    # Locate the elements in xml file to update
-    x_value = root.find('x_value')
-    y_value = root.find('y_value')
-
-    # Update the values
-    x_value.text = ''  # Update value1 to 42
-    y_value.text = '7.77'  # Update value2 to 7.77
-
-    # Write the changes back to the file
-    tree.write('data.xml')
-
 
 if __name__ == '__main__':
 
Index: Python/assets.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\"?>\r\n\r\n<data>\r\n    <!-- Color XY values -->\r\n    <x_value></x_value>\r\n    <y_value></y_value>\r\n\r\n    <!-- Start/Stop time for lights -->\r\n    <start_time></start_time>\r\n    <end_time></end_time>\r\n\r\n    <!-- FCM registration token -->\r\n    <registratation_token></registratation_token>\r\n</data>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Python/assets.xml b/Python/assets.xml
--- a/Python/assets.xml	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/Python/assets.xml	(date 1703851509423)
@@ -6,8 +6,11 @@
     <y_value></y_value>
 
     <!-- Start/Stop time for lights -->
-    <start_time></start_time>
-    <end_time></end_time>
+    <start_hour></start_hour>
+    <start_min></start_min>
+
+    <end_hour></end_hour>
+    <end_min></end_min>
 
     <!-- FCM registration token -->
     <registratation_token></registratation_token>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/layout/fragment_log.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/layout/fragment_settings.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/layout/fragment_stream.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/layout/logs_item.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/menu/bottom_nav_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/face detection application/app/src/main/res/navigation/mobile_navigation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Face_detection_Application</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4666603d-402a-4cc1-b619-2790b415edf0\" name=\"Changes\" comment=\"ipadress temps\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.androidTest.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.androidTest.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.unitTest.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.unitTest.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/retrofitInterface.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/retrofitInterface.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[C:\\Users\\leg0m\\.android\\avd\\Pixel_3a_API_34_extension_level_7_x86_64.avd]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$/face detection application\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/Android/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"SilentGuard\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"SilentGuard\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"SilentGuard\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"SilentGuard\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2ZXKOKno55rJbnIqkBFlpkUYAiL\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/leg0m/AndroidStudioProjects/SilentGuard_IOT23_G4-3/face detection application/settings.gradle.kts&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\leg0m\\AndroidStudioProjects\\SilentGuard_IOT23_G4-3\\face detection application\\app\\src\\main\\assets\" />\r\n      <recent name=\"C:\\Users\\frida\\AndroidStudioProjects\\SilentGuard_IOT23_G4-3\\face detection application\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"C:\\Users\\leg0m\\AndroidStudioProjects\\SilentGuard_IOT23_G4-3\\face detection application\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Face_detection_Application.app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Face_detection_Application.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4666603d-402a-4cc1-b619-2790b415edf0\" name=\"Changes\" comment=\"\" />\r\n      <created>1702562950952</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702562950952</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"trying to fix android studios\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702563196267</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702563196267</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"trying to fix android studios\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702565722897</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702565722897</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some ui and id changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702643538913</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702643538913</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Completed logs tab\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702650726796</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702650726796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Completed logs tab\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702650898898</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702650898898</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Completed logs tab\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702650978960</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702650978960</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Completed Logs functionality and fixed UI buttons not sending you to right tab aswell as other GUI related fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702910805078</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702910805078</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00008\" summary=\"Fixed elements not showing correctly on Stream/Settings pages\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703069326843</created>\r\n      <option name=\"number\" value=\"LOCAL−00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00008\" />\r\n      <updated>1703069326843</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00009\" summary=\"added Disable System button structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703076260992</created>\r\n      <option name=\"number\" value=\"LOCAL−00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00009\" />\r\n      <updated>1703076260992</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00010\" summary=\"fixed disable button toggle\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703321622211</created>\r\n      <option name=\"number\" value=\"LOCAL−00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00010\" />\r\n      <updated>1703321622211</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00011\" summary=\"updated rgb colors sent, updated timepicker\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703680326488</created>\r\n      <option name=\"number\" value=\"LOCAL−00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00011\" />\r\n      <updated>1703680326489</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00012\" summary=\"ipadress temps\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703774544368</created>\r\n      <option name=\"number\" value=\"LOCAL−00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00012\" />\r\n      <updated>1703774544368</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"trying to fix android studios\" />\r\n    <MESSAGE value=\"some ui and id changes\" />\r\n    <MESSAGE value=\"Completed logs tab\" />\r\n    <MESSAGE value=\"Completed Logs functionality and fixed UI buttons not sending you to right tab aswell as other GUI related fixes\" />\r\n    <MESSAGE value=\"Fixed elements not showing correctly on Stream/Settings pages\" />\r\n    <MESSAGE value=\"added Disable System button structure\" />\r\n    <MESSAGE value=\"fixed disable button toggle\" />\r\n    <MESSAGE value=\"updated rgb colors sent, updated timepicker\" />\r\n    <MESSAGE value=\"ipadress temps\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"ipadress temps\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6bc2f34005d080e92ead5742f20411dbd2d1ce8f)
+++ b/.idea/workspace.xml	(date 1703852172000)
@@ -47,13 +47,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="4666603d-402a-4cc1-b619-2790b415edf0" name="Changes" comment="ipadress temps">
-      <change beforePath="$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.androidTest.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.androidTest.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.unitTest.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/app/Face_detection_Application.app.unitTest.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-12-28_15_40__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Python/assets.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Python/assets.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Python/flaskServer.py" beforeDir="false" afterPath="$PROJECT_DIR$/Python/flaskServer.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/LogFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/retrofitInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/log/retrofitInterface.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/settings/SettingsFragment.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/face detection application/app/src/main/java/com/example/face_detection_application/ui/stream/StreamFragment.java" afterDir="false" />
     </list>
@@ -65,7 +62,7 @@
   <component name="ClangdSettings">
     <option name="formatViaClangd" value="false" />
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[C:\Users\leg0m\.android\avd\Pixel_3a_API_34_extension_level_7_x86_64.avd]" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[C:\Users\viqto\.android\avd\Pixel_3_XL_API_34.avd]" />
   <component name="ExternalProjectsData">
     <projectState path="$PROJECT_DIR$/face detection application">
       <ProjectState />
@@ -325,7 +322,14 @@
       <option name="presentableId" value="LOCAL−00012" />
       <updated>1703774544368</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL−00013" summary="ipadress temps">
+      <option name="closed" value="true" />
+      <created>1703775590677</created>
+      <option name="number" value="LOCAL−00013" />
+      <option name="presentableId" value="LOCAL−00013" />
+      <updated>1703775590677</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
